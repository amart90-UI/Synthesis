loc.t2$Distance * cos(loc.t2$Bearing)
loc.t2$X <- loc.t2$Xplot + loc.t2$Distance * cos(loc.t2$Bearing)
loc.t2$Y <- loc.t2$Yplot +loc.t2$Distance * sin(loc.t2$Bearing)
View(loc.t2)
sqrt(loc.t2$X + loc.t2$Y)
-1004 + 106 *cos(103)
106 *cos(103)-1004
106 *cos(pi*103)- 1004
- 1004 +106 *cos(pi*103)
- 1004 +106 *cos(103-90)
- 1004 + 106 *sin(103-90)
- 1004 + 106 *cos(103-90)
- 1004 + 106 * cos(pi*(103-90))
- 1004 + 160 * cos((103-90)
#Load lidar data
LASfile <- system.file("extdata", "LASexample1.las", package="rLiDAR")
LAS <- readLAS(LASfile, short = TRUE)
#Load canopy height model
#Find trees
trees <- FindTreesCHM(chm, fws = , minht = 1.37)
#Cluster points to trees (assign points to trees)
xyzi<-subset(LAS[,1:4],LAS[,3] >= 1.37)
clLAS<-kmeans(xyzi[,1:2], centers = trees[,2:3])
# Set the tree id vector
Id<-as.factor(clLAS$cluster)
# Combining xyzi and tree id
xyziId<-cbind(xyzi,Id)
#Get crown metrics for each tree
cmet <- CrownMetrics(xyziId)
#Prune the xyzID to measured trees
#Add species to xyziID
#create Random Forest Model
mod1 <- randomForest(species ~ ., data=xyziId, importance = TRUE)
mod2 <- rpart(species ~ ., data=xyziId)
- 1004 + 160 * cos(103-90)
- 1004 + 160 * cos(103)
- 1004 + 160 * cos(103-90)
- 1004 + 160 * sin(103-90)
635 + 160 * sin(103-90)
635 + 160 * cos(103-90)
635 + 160 * acos(103-90)
635 + 160 * cos(103*pi/180)
5.99 + 160 * cos(103*pi/180)
635 + 160 * cos(103*pi/180)
-1004 + 160 * sin(103*pi()/180)
-1004 + 160 * sin(103*pi/180)
-1004 + 160 * sin(103*pi/180)
635 + 160 * cos(103*pi()/180)
635 + 160 * cos(103*pi/180)
-1004 + 160 * cos(103*pi/180)
635 + 160 * sin(103*pi/180)
-1004 + 160 * sin(103*pi/180)
635 + 160 * cos(103*pi/180)
-1004 + 160 * cos((103-90)*pi/180)
-1004 + 160 * cos(103*pi/180)
-1004 + 160 * cos((90-103)*pi/180)
635 + 160 * cos(103*pi/180)
635 + 160 * sin((90-103)*pi/180)
200 + 1888 * cos((90-125)*pi/180)
635 + 1888 * sin((90-125)*pi/180)
600 + 1888 * sin((90-125)*pi/180)
0 + 1888 * cos((90-90)*pi/180)
0+ 1888 * sin((90-90)*pi/180)
200 + 1888 * cos((90-90)*pi/180)
600+ 1888 * sin((90-90)*pi/180)
200 + 100 * cos((90-90)*pi/180)
600+ 1000 * sin((90-90)*pi/180)
200 + 1000 * cos((90-0)*pi/180)
600+ 1000 * sin((90-0)*pi/180)
200 + 1000 * cos((90-90)*pi/180)
600+ 1000 * sin((90-90)*pi/180)
loc.t2$Xplot + loc.t2$Distance * cos((90 - loc.t2$Bearing)*pi/180)
loc.t2$Y <- loc.t2$Yplot +loc.t2$Distance * sin((90 - loc.t2$Bearing)*pi/180)
library(rgeos)
library(raster)
library(rgdal)
OTF <- readOGR("C:/Users/PyroGeo/Documents/UI-Drive/UI-Drive/MISC/OTF_Fires.shp")
a <- 2+6
print(a)
b <- 10*15
print(b)
c <- 52/8.2
print(c)
gc()
df1 <- data.frame(ID = 1:20,
Class = c(rep(1,10), rep(2,8), rep(3,2)),
Male = rep(c(1,2),10),
Twitter = c(1,25,4,8,5,66,5,7,5,1,23,5,7,2,58,4,5,4,89,35))
for(i in seq_along(unique(df1$Class))){
assign(paste0("df.", i), df1[df1$Class == i, "Twitter"])
}
df1 <- data.frame(ID = 1:20,
Class = c(rep(1,10), rep(2,8), rep(3,2)),
Male = rep(c(1,2),10),
Twitter = c(1,25,4,8,5,66,5,7,5,1,23,5,7,2,58,4,5,4,89,35))
for(i in seq_along(unique(df1$Class))){
assign(paste0("tw", i), df1[df1$Class == i, "Twitter"])
}
df.list <- mget(paste0("tw",unique(df1$Class)))
df1 <- data.frame(ID = 1:20,
Class = c(rep(1,10), rep(2,8), rep(3,2)),
Male = rep(c(1,2),10),
Twitter = c(1,25,4,8,5,66,5,7,5,1,23,5,7,2,58,4,5,4,89,35))
for(i in seq_along(unique(df1$Class))){
assign(paste0("tw", i), df1[df1$Class == i, "Twitter"])
}
df.list <- mget(paste0("tw",unique(df1$Class)))
tw.list <- mget(paste0("tw",unique(df1$Class)))
N.h <- c(9100, 1800, 600)
n.h <- length(tw.list)
n.h <- sapply(tw.list, function(x) length(x))
ybar <- sapply(tw.list, function(x) sum(x))
ybar.h <- sapply(tw.list, function(x) mean(x))
s2.h <- sapply(df.list, function(x) var(x))
N <- sum(N.h)
N.h / ybar.h
sum(N.h / ybar.h)
ybar <- (1/N) * sum(N.h / ybar.h)
ybar <- (1/N) * sum(N.h * ybar.h)
mean(df1$class)
mean(df1$Class)
mean(df1$Twitter)
df1 <- data.frame(ID = 1:20,
Class = c(rep(1,10), rep(2,8), rep(3,2)),
Male = rep(c(1,2),10),
Twitter = c(1,25,4,8,5,66,5,7,5,1,23,5,7,2,58,4,5,4,89,35))
for(i in seq_along(unique(df1$Class))){
assign(paste0("tw", i), df1[df1$Class == i, "Twitter"])
}
tw.list <- mget(paste0("tw",unique(df1$Class)))
N.h <- c(9100, 1800, 600)
N <- sum(N.h)
n.h <- sapply(tw.list, function(x) length(x))
ybar.h <- sapply(tw.list, function(x) mean(x))
ybar <- (1/N) * sum(N.h * ybar.h)
s2.h <- sapply(df.list, function(x) var(x))
s2.h <- sapply(tw.list, function(x) var(x))
(N.h/N)^2
varhat <- sum((N.h/N)^2 * (1- (n.h / N.h)) * (s2.h/n.h))
se <- sqrt(varhat)
scale(a)
a <- 0.95
scale(a)
qnorm(a/2)
qnorm(a)
z <- qnorm(1-a/2)
a <- 0.05
z <- qnorm(1-a/2)
a <- 0.1
z <- qnorm(1-a/2)
install.packages("lpSolve")
library(lpsolve)
library(lpSolve)
ui.perim <- readOGR("C:/Users/PyroGeo/Refugia/Ranking/Datasets/Unburned Island/unburned_areas_gt1pixel_clp.shp")
library(rgdal)
library(raster)
library(rgeos)
ui.perim <- readOGR("C:/Users/PyroGeo/Refugia/Ranking/Datasets/Unburned Island/unburned_areas_gt1pixel_clp.shp")
head(ui.perim@data)
head(ui.perim@data)
df1 <- uiperim@data
df1 <- ui.perim@data
View(df1)
fires <- unique(df1$fire_id)
fires[1]
fires[2]
length(df1$fire_id == fires[1])
fires <- as.character(unique(df1$fire_id))
length(df1$fire_id == fires[1])
sum(df1$fire_id == fires[1])
sum(df1$fire_id == fires[1], na.rm = T)
a <- sapply(fires, function(x) sum(df1$fire_id == x, na.rm = T))
summary(a)
df1.1 <- data.frame(Fire_ID = fires, Unburned Islands = a)
df1.1 <- data.frame(Fire_ID = fires, Unburned Islands = a)
df1.1 <- data.frame("Fire_ID" = fires,
"Unburned Islands" = a)
df1.1 <- data.frame(Fire_ID = fires,
Unburned_Islands = a)
df1.1 <- data.frame()
df1.1 <- cbind(df1.1, fires)
df1.1 <- data.frame(col1 = 1:2297)
df1.1 <- cbind(df1.1, fires)
df1.1 <- data.frame(col1 = 1:2297)
df1.1 <- cbind(df1.1, fires, a)
View(a)
b <- integer(a)
a <- sapply(fires, function(x) data.frame(fires = fires, ui = sum(df1$fire_id == x, na.rm = T))
b <- integer(a)
df1.1 <- data.frame(col1 = 1:2297)
df1.1 <- cbind(df1.1, fires, a)
View(a)
a <- sapply(fires, function(x) data.frame(fires = fires, ui = sum(df1$fire_id == x, na.rm = T)))
View(a)
a <- table(df1$fire_id)
head(a)
View(df1)
write.csv(a, file = "C:/Users/PyroGeo/Refugia/Ranking/Output/UIfreq")
summary(a)
summary(a$Freq)
b <- as.data.frame(a)
View(b)
summary(b$Freq)
sd(b$Freq)
mean(b$Freq)
hist(b$Freq)
load("C:/Users/PyroGeo/Refugia/Persistance/within1103.RData")
rm(ui.perim)
overlap <- sapply(ui.cont, function (x) length(x))
data <- data.frame(ID = 1:length(overlap),
overlap = overlap)
ui.overlap1 <- SpatialPolygonsDataFrame(ui.part, data)
ui.overlap <- ui.overlap1[ui.overlap1@data$overlap > 0,]
rm(data, overlap, ui.cont, ui.overlap1, ui.part)
save.image("C:/Users/PyroGeo/Refugia/Persistance/uioverlap1103.RData")
load("C:/Users/PyroGeo/Refugia/Persistance/uioverlap1103.RData")
writeOGR(ui.overlap, dsn="ui_overlap", layer = "ui_overlap", driver = "ESRI Shapefile", overwrite_layer = T)
library(rgdal)
library(raster)
library(rgeos)
writeOGR(ui.overlap, dsn="ui_overlap", layer = "ui_overlap", driver = "ESRI Shapefile", overwrite_layer = T)
df <- data.frame(x= c(1,2,3,4,5), y= c(12,7,4,3,1))
plot(y~x, data=df)
mod <- glm(y,x, family = binomial)
mod <- glm(y,x, data=df, family = binomial)
mod <- glm(y~x, data=df, family = binomial)
mod <- glm(y~x, data=df, family = "poisson")
exp(-100)
exp(-1)
log(-1)
summary(mod)
y <- exp(mod$coefficients[1]+mod$coefficients[2]*x)
x <- df$x
y <- exp(mod$coefficients[1]+mod$coefficients[2]*x)
lines(y~x)
exp(mod$coefficients[1]+mod$coefficients[2]*x)
exp(mod$coefficients[1]+mod$coefficients[2])
mod$coefficients[1]+mod$coefficients[2]
df <- data.frame(x= c(1,2,3,4,5), y= c(12,7,4,3,1))
plot(y~x, data=df)
mod <- glm(y~x, data=df, family = "poisson")
summary(mod)
summary(mod)
x <- df$x
y <- exp(mod$coefficients[1]+mod$coefficients[2]*x)
lines(y~x)
y <- exp(mod$coefficients[1]+mod$coefficients[2]*x)
y
exp(mod$coefficients[1]+mod$coefficients[2])
exp(0.5)
mod2 <- lm(y~x, data=df)
abline(mod2)
# Setup
setwd("C:/Users/PyroGeo/Refugia/Synthesis/")
library(rgeos)
library(rgdal)
library(raster)
# Make template
template.unclipped <- raster("1km_template.tif")
studyarea <- readOGR("study_area3_NAD83z11_area.shp")
studyarea <- spTransform(studyarea, proj4string(template.unclipped))
template <- mask(template.unclipped, studyarea)
# Create unburned islands raster
fireperim <- readOGR("mtbs_perims_1984_2014_clp_utm_farea.shp")
ui <- readOGR("unburned_areas_database/unburned_areas_gt1pixel_clp.shp")
fires <- fireperim@data$Fire_ID
fires <- unique(as.character(fires))
# Delete when complete
#####################################
fireperim.full <- fireperim
ui.full <- ui
fireperim <- fireperim[1:10,]
fires <- fireperim@data$Fire_ID
fires <- unique(as.character(fires))
ui <- ui[ui@data$fire_id %in% fires,]
#####################################
name <- fires[1]
ui.poly <- ui[ui@data$fire_id == name,]
perim.poly <- fireperim[fireperim@data$Fire_ID == name,]
perim.raster <- crop(blank, perim.poly)
landsat <- raster("LE07_L1TP_042028_20171201_20171201_01_RT_B7.tif") #landsat image for reference
values(landsat) = NA
studyarea.proj <- spTransform(studyarea, proj4string(fireperim))
blank.1 <- projectRaster(landsat, crs = proj4string(fireperim))
blank <- extend(blank.1, extent(studyarea.proj), value = NA)
writeRaster(blank, "blank", 'GTiff')
ui.poly <- ui[ui@data$fire_id == name,]
perim.poly <- fireperim[fireperim@data$Fire_ID == name,]
perim.raster <- crop(blank, perim.poly)
perim.raster1 <- rasterize(perim.poly, perim.raster, field = 1)
ui.raster <- rasterize(ui.poly, perim.raster, field = 2)
ui.raster1 <- perim.raster1 + ui.raster
plot(ui.raster1)
plot(perim.raster1)
plot(ui.raster)
plot(perim.raster1)
plot(ui.raster, add=T)
plot(ui.raster, add=T, col="red")
plot(perim.raster1)
ui.raster <- rasterize(ui.poly, perim.raster1, field = 2, background = NA, update = T)
plot(ui.raster)
perim.raster1 <- rasterize(perim.poly, perim.raster, field = 0, background = NA)
ui.raster <- rasterize(ui.poly, perim.raster1, field = 1, background = NA, update = T)
plot(ui.raster)
writeRaster(ui.raster, "ui_raster", "GTiff")
writeRaster(ui.raster, "ui_raster", "GTiff", overwrite = T)
UiToRaster <- function(name) {
ui.poly <- ui[ui@data$fire_id == name,]
perim.poly <- fireperim[fireperim@data$Fire_ID == name,]
perim.raster <- crop(blank, perim.poly)
perim.raster1 <- rasterize(perim.poly, perim.raster, field = 0, background = NA)
ui.raster <- rasterize(ui.poly, perim.raster1, field = 1, background = NA, update = T)
}
name1 <- fires[1]
name1 <- fires[2]
test1 <- UiToRaster(name1)
plot(test1)
test2 <- UiToRaster(fires)
test2 <- lapply(fires, FUN = UiToRaster(x))
test2 <- sapply(fires, FUN = UiToRaster)
s <- Sys.time()
e <- Sys.time()
time <- e-s
time <- e - s
time
s <- Sys.time()
name <- fires[3]
UiToRaster <- function(name) {
ui.poly <- ui[ui@data$fire_id == name,]
perim.poly <- fireperim[fireperim@data$Fire_ID == name,]
perim.raster <- crop(blank, perim.poly)
perim.raster1 <- rasterize(perim.poly, perim.raster, field = 0, background = NA)
ui.raster <- rasterize(ui.poly, perim.raster1, field = 1, background = NA, update = T)
}
e <- Sys.time()
time1 <- e - s
print(time1)
s <- Sys.time()
name <- fires[1]
UiToRaster <- function(name) {
ui.poly <- ui[ui@data$fire_id == name,]
perim.poly <- fireperim[fireperim@data$Fire_ID == name,]
perim.raster <- crop(blank, perim.poly)
perim.raster1 <- rasterize(perim.poly, perim.raster, field = 0, background = NA)
ui.raster <- rasterize(ui.poly, perim.raster1, field = 1, background = NA, update = T)
}
e <- Sys.time()
time1 <- e - s
print(time1)
s <- Sys.time()
name <- fires[3]
UiToRaster <- function(name) {
ui.poly <- ui[ui@data$fire_id == name,]
perim.poly <- fireperim[fireperim@data$Fire_ID == name,]
#perim.raster <- crop(blank, perim.poly)
perim.raster1 <- rasterize(blank, perim.raster, field = 0, background = NA)
#perim.raster1 <- rasterize(perim.poly, perim.raster, field = 0, background = NA)
ui.raster <- rasterize(ui.poly, perim.raster1, field = 1, background = NA, update = T)
}
e <- Sys.time()
time2 <- e - s
print(time2)
file.info(ui.raster)
object.size(ui.raster)
s <- Sys.time()
name <- fires[3]
UiToRaster <- function(name) {
ui.poly <- ui[ui@data$fire_id == name,]
perim.poly <- fireperim[fireperim@data$Fire_ID == name,]
perim.raster <- crop(blank, perim.poly)
#perim.raster1 <- rasterize(blank, perim.raster, field = 0, background = NA)
perim.raster1 <- rasterize(perim.poly, perim.raster, field = 0, background = NA)
ui.raster <- rasterize(ui.poly, perim.raster1, field = 1, background = NA, update = T)
}
e <- Sys.time()
time2 <- e - s
print(time2)
object.size(ui.raster)
extent(ui.raster)
s <- Sys.time()
name <- fires[3]
UiToRaster <- function(name) {
ui.poly <- ui[ui@data$fire_id == name,]
perim.poly <- fireperim[fireperim@data$Fire_ID == name,]
#perim.raster <- crop(blank, perim.poly)
perim.raster1 <- rasterize(blank, perim.raster, field = 0, background = NA)
#perim.raster1 <- rasterize(perim.poly, perim.raster, field = 0, background = NA)
ui.raster <- rasterize(ui.poly, perim.raster1, field = 1, background = NA, update = T)
}
e <- Sys.time()
time2 <- e - s
print(time2)
object.size(ui.raster)
extent(ui.raster)
extent(blank)
extent(perim.poly)
extent(perim.raster)
s <- Sys.time()
name <- fires[3]
UiToRaster <- function(name) {
ui.poly <- ui[ui@data$fire_id == name,]
perim.poly <- fireperim[fireperim@data$Fire_ID == name,]
#perim.raster <- crop(blank, perim.poly)
#perim.raster1 <- rasterize(perim.poly, perim.raster, field = 0, background = NA)
perim.raster1 <- rasterize(blank, perim.raster, field = 0, background = NA)
ui.raster <- rasterize(ui.poly, perim.raster1, field = 1, background = NA, update = T)
ui.raster1 <- extend(ui.raster, extent(blank), value=NA)
return(ui.raster1)
}
e <- Sys.time()
time2 <- e - s
print(time2)
object.size(ui.raster)
extent(ui.raster)
s <- Sys.time()
name <- fires[3]
ui.poly <- ui[ui@data$fire_id == name,]
perim.poly <- fireperim[fireperim@data$Fire_ID == name,]
#perim.raster <- crop(blank, perim.poly)
#perim.raster1 <- rasterize(perim.poly, perim.raster, field = 0, background = NA)
perim.raster1 <- rasterize(blank, perim.raster, field = 0, background = NA)
ui.raster <- rasterize(ui.poly, perim.raster1, field = 1, background = NA, update = T)
#ui.raster1 <- extend(ui.raster, extent(blank), value=NA)
return(ui.raster1)
e <- Sys.time()
time2 <- e - s
print(time2)
object.size(ui.raster)
extent(ui.raster)
s <- Sys.time()
name <- fires[3]
ui.poly <- ui[ui@data$fire_id == name,]
perim.poly <- fireperim[fireperim@data$Fire_ID == name,]
perim.raster1 <- rasterize(blank, perim.raster, field = 0, background = NA)
perim.raster1 <- rasterize(perim.poly, blank, field = 0, background = NA)
s <- Sys.time()
name <- fires[3]
ui.poly <- ui[ui@data$fire_id == name,]
perim.poly <- fireperim[fireperim@data$Fire_ID == name,]
#perim.raster <- crop(blank, perim.poly)
#perim.raster1 <- rasterize(perim.poly, perim.raster, field = 0, background = NA)
perim.raster1 <- rasterize(perim.poly, blank, field = 0, background = NA)
ui.raster <- rasterize(ui.poly, perim.raster1, field = 1, background = NA, update = T)
s <- Sys.time()
name <- fires[3]
ui.poly <- ui[ui@data$fire_id == name,]
perim.poly <- fireperim[fireperim@data$Fire_ID == name,]
perim.raster <- crop(blank, perim.poly)
perim.raster1 <- rasterize(perim.poly, perim.raster, field = 0, background = NA)
#perim.raster1 <- rasterize(perim.poly, blank, field = 0, background = NA)
ui.raster <- rasterize(ui.poly, perim.raster1, field = 1, background = NA, update = T)
ui.raster1 <- extend(ui.raster, extent(blank), value=NA)
e <- Sys.time()
time2 <- e - s
print(time2)
object.size(ui.raster)
extent(ui.raster)
1.5*2794
/60
1.5*2794 /60
extent(ui.raster1)
a <- sum(blank, ui.raster)
object.size(ui.raster1)
object.size(ui.raster)
uiras <- function(name){
ui.poly <- ui[ui@data$fire_id == name,]
perim.poly <- fireperim[fireperim@data$Fire_ID == name,]
perim.raster <- crop(blank, perim.poly)
perim.raster1 <- rasterize(perim.poly, perim.raster, field = 0, background = NA)
ui.raster <- rasterize(ui.poly, perim.raster1, field = 1, background = NA, update = T)
ui.raster1 <- extend(ui.raster, extent(blank), value=NA)
}
s <- Sys.time()
test1 <- sapply(fires, FUN = uiras)
e <- Sys.time()
time1 <- e - s
print(time1)
s <- Sys.time()
perims.raster <- rasterize(fireperim, blank, field = 0, background = NA)
s <- Sys.time()
perims.raster <- rasterize(fireperim, blank, field = 0, background = NA)
uis.raster <-  rasterize(ui.poly, perim.raster1, field = 1, background = NA, update = T)
e <- Sys.time()
time2 <- e - s
print(time2)
writeRaster(uis.raster, "ui.raster.test1", 'GTiff')
getwd()
writeRaster(uis.raster, "ui_raster_test1", 'GTiff')
plot(fireperim)
plot(studyarea.proj, add=t)
plot(studyarea.proj, add=T)
plot(studyarea.proj)
plot(fireperim, add=T)
plot(studyarea.proj)
plot(uis.raster, add=T, col="red")
s <- Sys.time()
perims.raster <- rasterize(fireperim, blank, field = 0, background = NA)
uis.raster <-  rasterize(ui, perims.raster, field = 1, background = NA, update = T)
e <- Sys.time()
time2 <- e - s
print(time2)
s <- Sys.time()
perims.raster <- rasterize(fireperim, blank, field = 0, background = NA)
plot(studyarea.proj)
plot(uis.raster, add=T, col="red")
writeRaster(uis.raster, "ui.raster.test1", 'GTiff')
writeRaster(uis.raster, "ui.raster.test2", 'GTiff')
writeRaster(uis.raster, "ui_raster_test2", 'GTiff')
extent(uis.raster)
extent(blank)
gc()
gc()
